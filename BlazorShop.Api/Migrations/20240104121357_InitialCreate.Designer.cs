// <auto-generated />
using System;
using BlazorShop.Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BlazorShop.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240104121357_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BlazorShop.Api.Entities.Category", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("categoryId"));

                    b.Property<string>("IconCSS")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("categoryId");

                    b.ToTable("tb_Category");

                    b.HasData(
                        new
                        {
                            categoryId = 1,
                            IconCSS = "fas fa-spa",
                            Name = "Beauty"
                        },
                        new
                        {
                            categoryId = 2,
                            IconCSS = "Bev fa-spa",
                            Name = "Beverages"
                        },
                        new
                        {
                            categoryId = 3,
                            IconCSS = "Auto fa-spa",
                            Name = "AutoParts"
                        },
                        new
                        {
                            categoryId = 4,
                            IconCSS = "fas fa-shoe-prints",
                            Name = "Shoes"
                        },
                        new
                        {
                            categoryId = 5,
                            IconCSS = "fas fa-couch",
                            Name = "Forniture"
                        },
                        new
                        {
                            categoryId = 6,
                            IconCSS = "fas fa-headphones",
                            Name = "Electronics"
                        });
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("productId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("qtdInStock")
                        .HasColumnType("integer");

                    b.HasKey("productId");

                    b.HasIndex("CategoryId");

                    b.ToTable("tb_Product");

                    b.HasData(
                        new
                        {
                            productId = 1,
                            CategoryId = 1,
                            Description = "Um kit fornecido pela Natura, contendo produtos para cuidados com a pele",
                            ImagemUrl = "/Imagens/Beauty/Beleza1.png",
                            Name = "Glossier - Beauty Kit",
                            Price = 100m,
                            qtdInStock = 100
                        },
                        new
                        {
                            productId = 2,
                            CategoryId = 1,
                            Description = "Um kit fornecido pela Curology, contendo produtos para cuidados com a pele",
                            ImagemUrl = "/Imagens/Beauty/Beleza2.png",
                            Name = "Curology - Kit para Pele",
                            Price = 50m,
                            qtdInStock = 45
                        },
                        new
                        {
                            productId = 3,
                            CategoryId = 1,
                            Description = "Um kit fornecido pela Glossier, contendo produtos para cuidados com a pele",
                            ImagemUrl = "/Imagens/Beauty/Beleza3.png",
                            Name = "Óleo de Coco Orgânico",
                            Price = 20m,
                            qtdInStock = 30
                        },
                        new
                        {
                            productId = 4,
                            CategoryId = 1,
                            Description = "Um kit fornecido pela Curology, contendo produtos para cuidados com a pele",
                            ImagemUrl = "/Imagens/Beauty/Beleza4.png",
                            Name = "Schwarzkopf - Kit de cuidados com a pele e cabelo",
                            Price = 50m,
                            qtdInStock = 60
                        },
                        new
                        {
                            productId = 5,
                            CategoryId = 1,
                            Description = "Kit de cuidados com a pele, contendo produtos para cuidados com a pele e cabelos",
                            ImagemUrl = "/Imagens/Beauty/Beleza5.png",
                            Name = "Kit de cuidados com a pele",
                            Price = 30m,
                            qtdInStock = 85
                        },
                        new
                        {
                            productId = 6,
                            CategoryId = 6,
                            Description = "Air Pods - fones de ouvido sem fio intra-auriculares",
                            ImagemUrl = "/Imagens/Electronics/eletronico1.png",
                            Name = "Fones de ouvidos",
                            Price = 100m,
                            qtdInStock = 120
                        },
                        new
                        {
                            productId = 7,
                            CategoryId = 6,
                            Description = "Fones de ouvido dourados na orelha - esses fones de ouvido não são sem fio",
                            ImagemUrl = "/Imagens/Electronics/eletronico2.png",
                            Name = "Fones de ouvido dourados",
                            Price = 40m,
                            qtdInStock = 200
                        },
                        new
                        {
                            productId = 8,
                            CategoryId = 6,
                            Description = "Fones de ouvido pretos na orelha - esses fones de ouvido não são sem fio",
                            ImagemUrl = "/Imagens/Electronics/eletronico3.png",
                            Name = "Fones de ouvido pretos",
                            Price = 40m,
                            qtdInStock = 300
                        },
                        new
                        {
                            productId = 9,
                            CategoryId = 6,
                            Description = "Câmera Digital Sennheiser - Câmera digital de alta qualidade fornecida pela Sennheiser - inclui tripé",
                            ImagemUrl = "/Imagens/Electronics/eletronico4.png",
                            Name = "Câmera digital Sennheiser com tripé",
                            Price = 600m,
                            qtdInStock = 20
                        },
                        new
                        {
                            productId = 10,
                            CategoryId = 6,
                            Description = "Canon Digital Camera - Câmera digital de alta qualidade fornecida pela Canon",
                            ImagemUrl = "/Imagens/Electronics/eletronico5.png",
                            Name = "Câmera Digital Canon",
                            Price = 500m,
                            qtdInStock = 15
                        },
                        new
                        {
                            productId = 11,
                            CategoryId = 6,
                            Description = "Gameboy - Fornecido por Nintendo",
                            ImagemUrl = "/Imagens/Electronics/tecnologia6.png",
                            Name = "Nintendo Gameboy",
                            Price = 100m,
                            qtdInStock = 60
                        },
                        new
                        {
                            productId = 12,
                            CategoryId = 5,
                            Description = "Cadeira de escritório em couro preto muito confortável",
                            ImagemUrl = "/Imagens/Forniture/moveis1.png",
                            Name = "Cadeira de escritório de couro preto",
                            Price = 50m,
                            qtdInStock = 212
                        },
                        new
                        {
                            productId = 13,
                            CategoryId = 5,
                            Description = "Cadeira de escritório em couro rosa muito confortável",
                            ImagemUrl = "/Imagens/Forniture/moveis2.png",
                            Name = "Cadeira de escritório de couro rosa",
                            Price = 50m,
                            qtdInStock = 112
                        },
                        new
                        {
                            productId = 14,
                            CategoryId = 5,
                            Description = "Poltrona muito confortável",
                            ImagemUrl = "/Imagens/Forniture/moveis3.png",
                            Name = "Espreguiçadeira",
                            Price = 70m,
                            qtdInStock = 90
                        },
                        new
                        {
                            productId = 15,
                            CategoryId = 5,
                            Description = "Poltrona prateada muito confortável",
                            ImagemUrl = "/Imagens/Forniture/moveis4.png",
                            Name = "Silver Lounge Chair",
                            Price = 120m,
                            qtdInStock = 95
                        },
                        new
                        {
                            productId = 16,
                            CategoryId = 5,
                            Description = "Abajur de mesa de porcelana branco e azul",
                            ImagemUrl = "/Imagens/Forniture/moveis6.png",
                            Name = "Luminária de mesa de porcelana",
                            Price = 15m,
                            qtdInStock = 100
                        },
                        new
                        {
                            productId = 17,
                            CategoryId = 5,
                            Description = "Abajur de mesa de escritório",
                            ImagemUrl = "/Imagens/Forniture/moveis7.png",
                            Name = "Office Table Lamp",
                            Price = 20m,
                            qtdInStock = 73
                        },
                        new
                        {
                            productId = 18,
                            CategoryId = 4,
                            Description = "Tênis Puma confortáveis na maioria dos tamanhos",
                            ImagemUrl = "/Imagens/Shoes/calcado1.png",
                            Name = "Tênis Puma",
                            Price = 100m,
                            qtdInStock = 50
                        },
                        new
                        {
                            productId = 19,
                            CategoryId = 4,
                            Description = "Tênis coloridos - disponíveis na maioria dos tamanhos",
                            ImagemUrl = "/Imagens/Shoes/calcado2.png",
                            Name = "Tênis Colodiros",
                            Price = 150m,
                            qtdInStock = 60
                        },
                        new
                        {
                            productId = 20,
                            CategoryId = 4,
                            Description = "Tênis Nike azul - disponível na maioria dos tamanhos",
                            ImagemUrl = "/Imagens/Shoes/calcado3.png",
                            Name = "Tênis Nike Azul",
                            Price = 200m,
                            qtdInStock = 70
                        },
                        new
                        {
                            productId = 21,
                            CategoryId = 4,
                            Description = "Treinadores Hummel coloridos - disponíveis na maioria dos tamanhos",
                            ImagemUrl = "/Imagens/Shoes/calcado4.png",
                            Name = "Tênis Hummel Coloridos",
                            Price = 120m,
                            qtdInStock = 120
                        },
                        new
                        {
                            productId = 22,
                            CategoryId = 4,
                            Description = "Tênis Nike vermelho - disponível na maioria dos tamanhos",
                            ImagemUrl = "/Imagens/Shoes/calcado5.png",
                            Name = "Tênis Nike Vermelho",
                            Price = 200m,
                            qtdInStock = 100
                        },
                        new
                        {
                            productId = 23,
                            CategoryId = 4,
                            Description = "Sandálias Birkenstock - disponíveis na maioria dos tamanhos",
                            ImagemUrl = "/Imagens/Shoes/calcado6.png",
                            Name = "Sandálidas Birkenstock",
                            Price = 50m,
                            qtdInStock = 150
                        },
                        new
                        {
                            productId = 30,
                            CategoryId = 1,
                            Description = "Small tires.",
                            ImagemUrl = "/Imagens/AutoParts/AutoParts30.png",
                            Manufacturer = "Pirelle",
                            Name = "Tire_165'60'13R",
                            Price = 323m,
                            qtdInStock = 10
                        },
                        new
                        {
                            productId = 31,
                            CategoryId = 1,
                            Description = "Sprt tire.",
                            ImagemUrl = "/Imagens/AutoParts/AutoParts31.png",
                            Manufacturer = "Toyo",
                            Name = "Tire_220'90'19R",
                            Price = 550m,
                            qtdInStock = 11
                        },
                        new
                        {
                            productId = 32,
                            CategoryId = 1,
                            Description = "windscreen wiper blade for Ford focus.",
                            ImagemUrl = "/Imagens/AutoParts/AutoParts32.png",
                            Manufacturer = "ChinaCo",
                            Name = "windscreen_wiper_blade",
                            Price = 13.32m,
                            qtdInStock = 12
                        },
                        new
                        {
                            productId = 41,
                            CategoryId = 1,
                            Description = "A long-lasting lipstick in a vibrant red color.",
                            ImagemUrl = "/Imagens/Beauty/Beleza41.png",
                            Manufacturer = "BeautyCo",
                            Name = "Lipstick",
                            Price = 15.99m,
                            qtdInStock = 13
                        },
                        new
                        {
                            productId = 42,
                            CategoryId = 1,
                            Description = "A waterproof mascara that adds volume and length to your lashes.",
                            ImagemUrl = "/Imagens/Beauty/Beleza42.png",
                            Manufacturer = "BeautyCo",
                            Name = "Mascara",
                            Price = 12.99m,
                            qtdInStock = 14
                        },
                        new
                        {
                            productId = 43,
                            CategoryId = 1,
                            Description = "A lightweight foundation that provides medium coverage for a natural look.",
                            ImagemUrl = "/Imagens/Beauty/Beleza43.png",
                            Manufacturer = "BeautyCo",
                            Name = "Foundation",
                            Price = 20.99m,
                            qtdInStock = 15
                        },
                        new
                        {
                            productId = 44,
                            CategoryId = 2,
                            Description = "Disgusting syrup.",
                            ImagemUrl = "/Imagens/Beverages/Beverage20.png",
                            Manufacturer = "CocaCo",
                            Name = "CocaCola_600ml",
                            Price = 1.99m,
                            qtdInStock = 16
                        },
                        new
                        {
                            productId = 45,
                            CategoryId = 2,
                            Description = "Just like beer, but only a sour-smelling drink. .",
                            ImagemUrl = "/Imagens/Beverages/Beverage21.png",
                            Manufacturer = "HeinikenCo",
                            Name = "Heiniken_0%",
                            Price = 1.79m,
                            qtdInStock = 17
                        },
                        new
                        {
                            productId = 46,
                            CategoryId = 2,
                            Description = "Sweet and dense beer.",
                            ImagemUrl = "/Imagens/Beverages/Beverage23.png",
                            Manufacturer = "TresLobosCo",
                            Name = "Bäcker_trigo_600ml",
                            Price = 2.59m,
                            qtdInStock = 18
                        });
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.ShopCar", b =>
                {
                    b.Property<int>("carId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("carId"));

                    b.Property<int?>("productId")
                        .HasColumnType("integer");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("carId");

                    b.HasIndex("productId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("tb_ShopCars");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.shopItems", b =>
                {
                    b.Property<int>("shopItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("shopItemsId"));

                    b.Property<int>("carId")
                        .HasColumnType("integer");

                    b.Property<int>("productId")
                        .HasColumnType("integer");

                    b.Property<int>("qtd")
                        .HasColumnType("integer");

                    b.Property<int?>("shopCarcarId")
                        .HasColumnType("integer");

                    b.HasKey("shopItemsId");

                    b.HasIndex("productId");

                    b.HasIndex("shopCarcarId");

                    b.ToTable("tb_ShopItems");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("userId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("userId");

                    b.ToTable("tb_User");

                    b.HasData(
                        new
                        {
                            userId = 1,
                            Email = "johndoe@example.com",
                            Name = "John Doe"
                        },
                        new
                        {
                            userId = 2,
                            Email = "janedoe@example.com",
                            Name = "Jane Doe"
                        },
                        new
                        {
                            userId = 3,
                            Email = "bobsmith@example.com",
                            Name = "Bob Smith"
                        });
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.Product", b =>
                {
                    b.HasOne("BlazorShop.Api.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.ShopCar", b =>
                {
                    b.HasOne("BlazorShop.Api.Entities.Product", null)
                        .WithMany("ShopCars")
                        .HasForeignKey("productId");

                    b.HasOne("BlazorShop.Api.Entities.User", null)
                        .WithOne("car")
                        .HasForeignKey("BlazorShop.Api.Entities.ShopCar", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.shopItems", b =>
                {
                    b.HasOne("BlazorShop.Api.Entities.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorShop.Api.Entities.ShopCar", "shopCar")
                        .WithMany("Itens")
                        .HasForeignKey("shopCarcarId");

                    b.Navigation("product");

                    b.Navigation("shopCar");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.Product", b =>
                {
                    b.Navigation("ShopCars");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.ShopCar", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.User", b =>
                {
                    b.Navigation("car");
                });
#pragma warning restore 612, 618
        }
    }
}
