@page "/ProductsCatalog"
@using System.Globalization
@inject IProdutoService produtoService

<h2>Products Page</h2>


@if (Products == null)
{
    <ShowSpinner />
    <ShowSpinner2 />
    <h3>Carregando Produtos...</h3>
}
else
{
   @* <h3 class="mb-5">Produtos</h3>
    @if (Products.Count() > 0)
    {
        <div class="row mt-3">
            <ExibirProdutos Products="@Products"></ExibirProdutos>
        </div>
    }
        <h3 class="mb-5">Produtos</h3>*@
      @if (Products.Count() > 0)
      {
          var produtosPorCategoria = from produto in Products
                                     group produto by produto.CategoryId into prodPorCatGrupo
                                     orderby prodPorCatGrupo.Key
                                     select prodPorCatGrupo;

        @foreach (var prodGrupo in produtosPorCategoria)
          {
              <h4>@prodGrupo.FirstOrDefault(pg=> pg.CategoryId == prodGrupo.Key).CategoryName</h4>
              <div class="row mt-3">
                <ExibirProdutos Products="@prodGrupo"></ExibirProdutos>
              </div>
              <hr class="mb-2"/>
          }
      }
 }


    @code {

    public IEnumerable<Product_DTO> Products { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Products = await produtoService.GetItens();
    }
    //public IEnumerable<Product_DTO> Products { get; set; }
    //
    //protected override async Task OnInitializedAsync()
    //{
    //    Products = await produtoService.GetItens();
    //}
    }

    @*[Inject]
    public IGerenciaProdutosLocalStorageService?
                 GerenciaProdutosLocalStorageService
    { get; set; }

    [Inject]
    public IGerenciaCarrinhoItensLocalStorageService?
                 GerenciaCarrinhoItensLocalStorageService
    { get; set; }

    [Inject]
    public ICarrinhoCompraService? CarrinhoCompraService { get; set; }

    public string? MensagemErro { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LimpaLocalStorage();

            Produtos = await GerenciaProdutosLocalStorageService.GetCollection();

            var carrinhoCompraItens = await GerenciaCarrinhoItensLocalStorageService
                                           .GetCollection();

            var totalQuantidade = carrinhoCompraItens.Sum(i => i.qtd);

            CarrinhoCompraService.RaiseEventOnCarrinhoCompraChanged(totalQuantidade);

        }
        catch (Exception ex)
        {
            MensagemErro = ex.Message;
        }
    }

    private async Task LimpaLocalStorage()
    {
        await GerenciaProdutosLocalStorageService.RemoveCollection();
        await GerenciaCarrinhoItensLocalStorageService.RemoveCollection();
    }*@